name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 12 * * *"

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install 2>&1 | tee build.log

      - name: Run build
        run: npm run build 2>&1 | tee -a build.log

      - name: Run tests
        run: npm test 2>&1 | tee -a build.log

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: build.log

  deploy:
    runs-on: self-hosted
    needs: build
    environment:
      name: production
    steps:
      - name: Wait for approval
        run: echo "Waiting for manual approval..."

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy application
        run: |
          {
            echo "Deploying application..."
            apt install docker.io -y
            sudo docker stop sample-node-app || true
            sudo docker rm sample-node-app || true
            sudo docker build . -t sample-node-app
            sudo docker run -itd --name sample-node-app -p 3000:3000 sample-node-app
            echo "Deployment complete!"
          } 2>&1 | tee deploy.log

      - name: Upload deploy logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deploy-logs
          path: deploy.log

  failure-logger:
    runs-on: self-hosted
    needs: [build, deploy]
    if: failure()
    steps:
      - name: Download logs
        uses: actions/download-artifact@v4
        with:
          path: ./logs

      - name: Capture failure logs
        run: |
          echo "Pipeline failed!" > failure.log
          echo "Time: $(date)" >> failure.log
          echo "GitHub Run ID: ${{ github.run_id }}" >> failure.log
          echo "Commit: ${{ github.sha }}" >> failure.log
          echo "Actor: ${{ github.actor }}" >> failure.log
          echo "--- Last 50 lines of build.log ---" >> failure.log
          tail -n 50 ./logs/build-logs/build.log >> failure.log || echo "No build.log found" >> failure.log
          echo "--- Last 50 lines of deploy.log ---" >> failure.log
          tail -n 50 ./logs/deploy-logs/deploy.log >> failure.log || echo "No deploy.log found" >> failure.log

      - name: Upload failure logs
        uses: actions/upload-artifact@v4
        with:
          name: failure-logs
          path: failure.log
